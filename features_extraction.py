# -*- coding: utf-8 -*-
"""features_extraction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19TjhiIi0vHXCYEZj8oPjHMn1FWvsdxTU
"""

import os
import librosa
import numpy as np
import pandas as pd
from tqdm import tqdm

dataset_path = "genres"
data_rows = []

def extract_features(file_path):
    y, sr = librosa.load(file_path, duration=30)
    features = {
        'chroma_stft_mean': np.mean(c := librosa.feature.chroma_stft(y=y, sr=sr)),
        'chroma_stft_var': np.var(c),
        'rms_mean': np.mean(r := librosa.feature.rms(y=y)),
        'rms_var': np.var(r),
        'spectral_centroid_mean': np.mean(s := librosa.feature.spectral_centroid(y=y, sr=sr)),
        'spectral_centroid_var': np.var(s),
        'spectral_bandwidth_mean': np.mean(b := librosa.feature.spectral_bandwidth(y=y, sr=sr)),
        'spectral_bandwidth_var': np.var(b),
        'rolloff_mean': np.mean(ro := librosa.feature.spectral_rolloff(y=y, sr=sr)),
        'rolloff_var': np.var(ro),
        'zero_crossing_rate_mean': np.mean(z := librosa.feature.zero_crossing_rate(y)),
        'zero_crossing_rate_var': np.var(z)
    }
    mfcc = librosa.feature.mfcc(y=y, sr=sr, n_mfcc=20)
    features.update({f'mfcc{i+1}_mean': np.mean(m) for i, m in enumerate(mfcc)})
    return features

for genre in os.listdir(dataset_path):
    for file in tqdm(os.listdir(os.path.join(dataset_path, genre)), desc=genre):
        if file.endswith(".wav"):
            try:
                fpath = os.path.join(dataset_path, genre, file)
                features = extract_features(fpath)
                features["label"] = genre
                data_rows.append(features)
            except: pass

pd.DataFrame(data_rows).to_csv("features_30_sec.csv", index=False)
print("âœ… Saved as features_30_sec.csv")